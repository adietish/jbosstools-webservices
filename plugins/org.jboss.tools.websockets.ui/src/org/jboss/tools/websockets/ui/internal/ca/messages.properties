onCloseProposalLabel=onClose(Session session, CloseReason closeReason): void - @OnClose method for WebSocket endpoint
onErrorProposalLabel=onError(Session session, Throwable throwable): void - @OnError method for WebSocket endpoint
onMessageTextProposalLabel=onMessage(String message): void - @OnMessage method with text message for WebSocket endpoint
onMessageBinaryProposalLabel=onMessage(byte[] message): void - @OnMessage method with binary message for WebSocket endpoint
onMessagePongProposalLabel=onMessage(PongMessage message): void - @OnMessage method with pong message for WebSocket endpoint
onOpenProposalLabel=onOpen(Session session, EndpointConfig endpointConfig): void - @OnOpen method for WebSocket endpoint

onCloseProposalInfo=Developers may implement this method to be notified immediately prior to the session with the remote peer being closed. It is called whether the session is being closed because the remote peer initiated a close and sent a close frame, or whether the local websocket container or this endpoint requests to close the session. The developer may take this last opportunity to retrieve session attributes such as the ID, or any application data it holds before it becomes unavailable after the completion of the method. Developers should not attempt to modify the session from within this method, or send new messages from this call as the underlying connection will not be able to send them at this stage.\
<dl><dt>Parameters:</dt><dd><b>session</b>  the session about to be closed</dd>\
<dd><b>config</b>  the reason the session was closed</dd>\
</dl>

onErrorProposalInfo=Developers may implement this method to be notified when the web socket session creates some kind of error that is not modeled in the web socket protocol. This may for example be a notification that an incoming message is too big to handle, or that the incoming message could not be encoded.\
There are a number of categories of exception that this method is (currently) defined to handle:\
<ul>\
<li>connection problems, for example, a socket failure that occurs before the web socket connection can be formally closed. These are modeled as SessionExceptions</li>\
<li>runtime errors thrown by developer created message handlers calls.</li>\
<li>conversion errors encoding incoming messages before any message handler has been called. These are modeled as DecodeExceptions</li>\
</ul>\
<dl><dt>Parameters:</dt><dd><b>session</b>  the session about to be closed</dd>\
<dd><b>throwable</b>  the throwable representing the problem</dd>\
</dl>

onMessageTextProposalInfo=Developers may implement this method to receive incoming text messages.\
<dl><dt>Parameters:</dt><dd><b>message</b>  the whole message</dd>\
</dl>

onMessageBinaryProposalInfo=Developers may implement this method to receive incoming binary messages.\
<dl><dt>Parameters:</dt><dd><b>message</b>  the whole message</dd>\
</dl>

onMessagePongProposalInfo=Developers may implement this method to receive incoming pong messages.\
<dl><dt>Parameters:</dt><dd><b>message</b>  the pong message</dd>\
</dl>

onOpenProposalInfo=Developers may implement this method to be notified when a new conversation has just begun.\
<dl><dt>Parameters:</dt><dd><b>session</b>  the session in use when the error occurs</dd>\
<dd><b>config</b>  the configuration used to configure this endpoint</dd>\
</dl>


 